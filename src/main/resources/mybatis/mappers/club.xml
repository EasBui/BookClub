<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper 
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Mapper.Club">
    <resultMap id="selectClubRM" type="Entity.Club.Club">
        <id property="ID" column="id"/>
        <result property="name" column="name"/>
        <result property="hostID" column="host_id"/>
        <result property="foundationDate" column="foundation_date"/>
        <result property="description" column="description"/>
        <result property="isOpened" column="isOpened"/>
        <collection property="tags" ofType="java.lang.String" javaType="list">
            <result column="content"/>
        </collection>
    </resultMap>
    <!-- Club Basic -->
    <select id="selectAllClubs" resultMap="selectClubRM">
        SELECT c.`id`
             , c.`name`
             , c.`foundation_date`
             , c.`description`
             , c.`host_id`
             , c.`isOpened`
             , t.`content`
          FROM `club` AS c
          LEFT OUTER
          JOIN `club_tag` AS t
            ON c.`id` = t.`club_id`
    </select>
    <select id="selectClubWithTitleQuery" parameterType="String" resultMap="selectClubRM">
        SELECT c.`id`
             , c.`name`
             , c.`foundation_date`
             , c.`description`
             , c.`host_id`
             , c.`isOpened`
             , t.`content`
        FROM (SELECT *
              FROM `club`
              WHERE `name` LIKE #{pattern}) AS c
        LEFT OUTER
        JOIN `club_tag` AS t
          ON c.`id` = t.`club_id`
    </select>
    <select id="selectClubWithTags" parameterType="String" resultMap="selectClubRM">
        SELECT *
          FROM (SELECT c.`id`
                     , c.`name`
                     , c.`foundation_date`
                     , c.`description`
                     , c.`host_id`
                     , c.`isOpened`
                  FROM `club` AS c
                  LEFT OUTER
                  JOIN `club_tag` AS ct
                    ON c.`id` = ct.`club_id`
                 GROUP BY c.`id`
                HAVING CONCAT('#', GROUP_CONCAT(ct.`content` ORDER BY ct.`content` ASC SEPARATOR '##'), '#') LIKE #{pattern} ) AS t
          LEFT OUTER
          JOIN `club_tag` AS ct
            ON t.`id` = ct.`club_id`
    </select>
    <select id="selectClub" parameterType="String" resultMap="selectClubRM">
        SELECT c.`id`
             , c.`name`
             , c.`foundation_date`
             , c.`description`
             , c.`host_id`
             , c.`isOpened`
             , t.`content`
        FROM (SELECT *
              FROM `club`
              WHERE `name` = #{name}) AS c
                 LEFT OUTER
                     JOIN `club_tag` AS t
                          ON c.`id` = t.`club_id`
    </select>
    <select id="selectClubWithMember" parameterType="String" resultMap="selectClubRM">
        SELECT c.`id`
             , c.`name`
             , c.`foundation_date`
             , c.`description`
             , c.`host_id`
             , c.`isOpened`
             , ct.`content`
        FROM (SELECT *
                FROM `club_member`
               WHERE `user_id` = (SELECT `id`
                                    FROM `user`
                                   WHERE `name` = #{userName})) as cm
        LEFT JOIN `club` as c
                  ON c.`id` = cm.`club_id`
        LEFT JOIN `club_tag` as ct
                  ON c.`id` = ct.`club_id`
    </select>
    
    <insert id="insertClub" parameterType="Entity.Club.Club" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `club`
               (`name`, `host_id`, `foundation_date`, `isOpened`, `description`)
        VALUES (#{name}, #{hostID}, #{foundationDate}, #{isOpened}, #{description})
    </insert>
    <insert id="insertClubTags" parameterType="java.util.Map">
        INSERT INTO `club_tag`
            (`club_id`, `content`)
        VALUES
        <foreach collection="tags" item="tag" separator="," open="(" close=")">
            #{clubID}, #{tag.content}
        </foreach>
    </insert>
    <update id="updateClub" parameterType="Entity.Club.Club">
        UPDATE `club`
        SET `name` = #{club.name}
          , `host_id` = #{club.hostId}
          , `description` = #{club.description}
          , `isOpened` = #{club.isOpened}
        WHERE `id` = #{club.ID}
    </update>
    <delete id="deleteClub" parameterType="String">
        DELETE
          FROM `club`
         WHERE `name` = #{name}
    </delete>

    <!-- About Club Members -->
    <resultMap id="UserRM" type="Entity.User.User">
        <id property="ID" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="profile" column="profile"/>
        <result property="registerDate" column="register_date"/>
        <result property="role" column="role"/>
        <result property="enable" column="enable"/>
    </resultMap>
    <select id="selectClubMember" parameterType="String" resultMap="UserRM">
        SELECT u.`id`
             , u.`account`
             , u.`password`
             , u.`name`
             , u.`profile`
             , u.`register_date`
             , u.`role`
             , u.`enable`
          FROM (SELECT `id`
                FROM `club`
                WHERE `name` = #{clubName}) AS c
          LEFT OUTER
          JOIN `club_member` AS cm
            ON c.`id` = cm.`club_id`
          LEFT OUTER
          JOIN `user` AS u
            ON cm.`user_id` = u.`id`;
    </select>
    <insert id="insertClubMember" parameterType="HashMap">
        INSERT INTO `club_member`
               (`club_id`, `user_id`)
        VALUES (#{clubID}, #{userID});
    </insert>
    <delete id="deleteClubMember" parameterType="HashMap">
        DELETE
          FROM `club_member`
         WHERE #{clubID} = `club_id`
           AND #{userID} = `user_id`;
    </delete>
    <select id="selectClubHost" parameterType="String" resultMap="UserRM">
        SELECT `id`
             , `account`
             , `password`
             , `name`
             , `profile`
             , `register_date`
             , `role`
             , `enable`
          FROM `user`
         WHERE `id` = (SELECT `host_id` FROM `club` WHERE `name` = #{clubName})
    </select>

    <!-- About Club Book - 읽거나 읽을 예정인 책들 -->
    <select id="selectClubBookStack" parameterType="String" resultType="Dto.Club.ClubBookStackResult">
        SELECT cbs.`book_code` AS `ISBN`
             , cbs.`is_read` AS `is_read`
             , COALESCE(-1, AVG(br.`rate`)) AS `average_rate`
          FROM (SELECT * FROM `club_book_stack` WHERE `club_name` = #{clubName}) AS cbs
          LEFT OUTER
          JOIN `book_review` AS br
            ON cbs.`club_name` = br.`club_name`
           AND cbs.`book_code` = br.`book_code`
         GROUP BY cbs.`club_name`, cbs.`book_code`
    </select>

    <insert id="insertClubBookStack" parameterType="HashMap">
        INSERT INTO `club_book_stack`
               (`club_name`, `book_code`, `is_read`)
        VALUES (#{clubName}, #{ISBN} , false);
    </insert>

    <delete id="deleteClubBookStack" parameterType="HashMap">
        DELETE
          FROM `club_book_stack`
         WHERE `club_name` = #{clubName}
           AND `book_code` = #{ISBN}
    </delete>

    <!-- SignUp 가입 신청 -->
    <select id="selectClubSignUps" parameterType="String" resultMap="UserRM">
        SELECT u.`id`
             , u.`account`
             , u.`password`
             , u.`name`
             , u.`profile`
             , u.`register_date`
             , u.`role`
             , u.`enable`
          FROM (SELECT * FROM `club_sign_up` WHERE `club_name` = 'TestClub1') AS csu
          LEFT OUTER
          JOIN `user` AS u
            ON csu.`user_id` = u.`id`;
    </select>
    <insert id="insertClubSignUp" parameterType="HashMap">
        INSERT `club_sign_up`
	           (`user_id`, `user_name`, `club_id`, `club_name`)
        VALUES ((SELECT `id` FROM `user` WHERE `name` = #{userName})
             , #{userName}
             , (SELECT `id` FROM `club` WHERE `name` = #{clubName})
             , #{clubName})
    </insert>
    <delete id="deleteClubSignUp" parameterType="HashMap">
        DELETE
        FROM `club_sign_up`
        WHERE `user_name` = #{userName}
          AND `club_name` = #{clubName}
    </delete>

</mapper>